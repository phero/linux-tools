#!python

"""
    Script for getting samples from AtCoder.
"""

import argparse
import getpass
import os
import re
import sys

import requests


def main(args):
    contest = args.contest
    problem = args.problem
    if not contest or not problem:
        d = os.getcwd()
        basename = os.path.basename(d)
        while basename:
            if len(basename) == 1 and basename.isalpha():
                if not problem:
                    problem = basename.upper()
                if not contest:
                    contest = os.path.basename(os.path.dirname(d))
                break
            d = os.path.dirname(d)
            basename = os.path.basename(d)
    assert contest and problem, 'contest={}, problem={} are invalid'.format(contest, problem)

    session = requests.session()

    # get CSRF token
    html = session.get('https://atcoder.jp/login').text
    r = re.search(r'''\<input.+name\s*=\s*['"]?csrf_token['"]?\s*value\s*=\s*['"]?(?P<token>[^'"\s]+)['"]?.*\>''', html)  # NOQA
    assert r is not None
    csrf_token = r.group('token')

    # login
    session.post('https://atcoder.jp/login', data={
        'username': os.getenv('ATCODER_USERNAME') or input('\nusername?: '),
        'password': os.getenv('ATCODER_PASSWORD') or getpass.getpass('password?: '),
        'csrf_token': csrf_token,
    })

    # get tasks page
    url = 'https://atcoder.jp/contests/{c}/tasks'.format(
        c=contest.lower(),
    )
    text = session.get(url).text
    path = re.compile(r'<a href="(/contests/{c}/tasks/.+?)">{p}</a>'.format(
        c=contest.lower(),
        p=problem.upper(),
    ))
    r = path.search(text)
    if r is None:
        print('Error: cannot find "{}" in {}'.format(path.pattern, url), file=sys.stderr)
        return
    url = 'https://atcoder.jp{}'.format(r.group(1))

    # get problem page
    text = session.get(url).text
    starts = [r.start() for r in re.finditer(r'入力例', text)]
    sample_id = 1
    for i in range(len(starts)):
        s = starts[i]
        e = starts[i + 1] if i + 1 < len(starts) else len(text)
        t = text[s:e]
        r = re.search(r'<pre[^>]*>(.+?)</pre>', t, re.DOTALL)
        if r is None:
            continue

        print('Getting sample{} ... '.format(sample_id), end='')
        sample = r.group(1).strip()
        with open('sample{}'.format(sample_id), 'w') as f:
            print(sample, file=f)
        print('done')

        sample_id += 1


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Script for getting AtCoder sample input.')
    parser.add_argument('-c', '--contest', dest='contest', type=str, required=False)
    parser.add_argument('-p', '--problem', dest='problem', type=str, required=False)
    args = parser.parse_args()
    main(args)
